const {Telegraf} = require('telegraf');
const express = require('express');

const app = express(); // Inicia uma inst√¢ncia do framework Express

const bot = new Telegraf("#"); // Inicializa o bot do Telegram com o token fornecido

bot.on('text', (ctx) => { // Define um ouvinte de eventos para mensagens de texto
    const text = ctx.message.text.toLowerCase(); // Converte o texto para min√∫sculas para facilitar a compara√ß√£o
    if (text.includes('!info')) { // Verifica se o texto da mensagem cont√©m '!info'
        ctx.reply( // Responde √† mensagem
            "Ol√°!üòÅ\n\nEu sou um bot do Telegram projetado para monitorar o n√≠vel de √°gua nas su" +
            "as caixas d'√°guaüë®‚Äçüíªüíß.\n\nMeu objetivo √© ajudar a garantir que voc√™ esteja ciente de q" +
            "ualquer queda no n√≠vel de √°gua, permitindo que voc√™ tome medidas rapidamente p" +
            "ara evitar escassez ou danos. Basta me adicionar ao seu grupo ou conversa e eu" +
            " come√ßarei a monitorar o n√≠vel da √°gua para voc√™. Se precisar de mais informa√ß" +
            "√µes sobre o meu funcionamento ou recursos adicionais, basta digitar o comando !info.\n\n" +
            "Para acessar o monitoramento completo das instala√ß√µes. Acesse o DashBoard no link abaixo:\n\n" +
            "http://linkdodashboard/   üëà" 
            // Mensagem de introdu√ß√£o e informa√ß√µes sobre o bot
        );
    }
    // else if (text.includes("abc")) {    ctx.reply("Ol√°, sou um BOT programado");
    // }
});

app.post('/triggerAlarm', (req, res) => { // Define um endpoint POST '/triggerAlarm'
    bot.telegram.sendMessage("#", // ID do chat onde enviar a mensagem
            "üö®üö®ALERTA: N√çVEL BAIXO DE √ÅGUA NA CAIXA D'√ÅGUAüö®üö®\n\n+O n√≠vel de √°gua na sua" +
                    " caixa d'√°gua est√° baixo! Isso pode indicar um vazamento ou uma entrada insufi" +
                    "ciente de √°gua. Verifique imediatamente as conex√µes, torneiras e tubula√ß√µes pa" +
                    "ra detectar vazamentos. ‚ùó‚ùó"  // Mensagem de alerta sobre o n√≠vel baixo de √°gua
        );
    res.sendStatus(200); // Envia um c√≥digo de status 200 (OK) como resposta
});

app.get('/', (req, res) => { // Define um endpoint GET '/'
    res.sendFile(__dirname + '/index.html'); // Envia o arquivo index.html como resposta
});

bot.launch(); // Inicia o bot do Telegram
console.log("Bot Running"); // Exibe uma mensagem indicando que o bot est√° em execu√ß√£o


app.listen(3000, () => { // Inicia o servidor Express na porta 3000
    console.log('Server running on port 3000'); // Exibe uma mensagem indicando que o servidor est√° em execu√ß√£o
});
